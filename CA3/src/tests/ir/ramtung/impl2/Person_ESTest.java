/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 14 18:08:40 GMT 2024
 */

package ir.ramtung.impl2;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Person_ESTest extends Person_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Prof prof0 = new Prof("qX2");
      prof0.penalty = (-1667830882);
      Magazine magazine0 = new Magazine("qX2", (-1), 0, (-1667830882));
      prof0.borrow(magazine0);
      prof0.timePass();
      prof0.timePass();
      prof0.timePass();
      assertEquals((-1667828882), prof0.getPenalty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Prof prof0 = new Prof("_RPfv!D%#d4.#U!*");
      prof0.penalty = (-2054550250);
      Magazine magazine0 = new Magazine("|T`lHl2~", (-2054550250), 2717, (-2054550250));
      prof0.borrow(magazine0);
      prof0.returnDoc("|T`lHl2~");
      assertTrue(prof0.canBorrow());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Student student0 = new Student("ir.ramtung.impl2.Document", "Z@kJ`B8vn._1dq");
      Book book0 = new Book("Z@kJ`B8vn._1dq", 4505);
      student0.borrow(book0);
      student0.borrow(book0);
      student0.extend("Z@kJ`B8vn._1dq");
      assertFalse(student0.canBorrow());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Prof prof0 = new Prof("0#xyC-JkB$");
      prof0.penalty = 3177;
      int int0 = prof0.getPenalty();
      assertEquals(3177, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Prof prof0 = new Prof("qX2");
      prof0.penalty = (-1667830882);
      int int0 = prof0.getPenalty();
      assertEquals((-1667830882), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Student student0 = new Student("ir.ramtung.impl2.Document", "Z@kJ`B8vn._1dq");
      student0.canBorrow();
      assertEquals(0, student0.getPenalty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Prof prof0 = new Prof(">0pT$GR<dhuzc");
      Reference reference0 = new Reference("", (-585));
      prof0.borrow(reference0);
      prof0.returnDoc("7v?f");
      assertEquals(0, prof0.getPenalty());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Student student0 = new Student("ir.ramtung.impl2.Document", "Z@kJ`B8vn._1dq");
      Book book0 = new Book("Z@kJ`B8vn._1dq", 4505);
      student0.borrow(book0);
      try { 
        student0.extend("ir.ramtung.impl2.Prof");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cant extend
         //
         verifyException("ir.ramtung.impl2.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Prof prof0 = new Prof("qX2");
      String string0 = prof0.getName();
      assertEquals(0, prof0.getPenalty());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Prof prof0 = new Prof("qX2");
      int int0 = prof0.getPenalty();
      assertEquals(0, int0);
  }
}
